line-length = 120
target-version = "py37"

[lint]
select = [
    "A", "B", "E", "F", "G", "I", "W", "N", "ASYNC", "C4", "COM", "FLY", "FURB", "ICN", "INT", "ISC", "LOG",
    "PERF", "PIE", "PLW", "PT", "PYI", "RET", "RSE", "RUF", "SIM", "TID", "TC", "UP", "YTT"
]
ignore = [
    # Preview. Complaining about spaces (aligned arguments) should be a formatter option, not a linter one!
    # https://github.com/astral-sh/ruff/issues/2402
    "E201", "E202", "E203", "E211", "E221", "E226", "E251", "E265", "E266",
    "E501",     # A linter should lint, not check for line lengths!
    "F401",     # Wants to from .version import __version__ as __version__ which clashes with pylint errors!
    "B904",
    "N801",     # Some class names are snake_case to match ctypes
    "N806",     # Variable names are camelCase instead of snake_case (1100+ errors).
    "COM812",   # Do not force trailing commas where it makes no sense, e.g., function calls for which I'll
                # never add more arguments.
    "PLW0603",  # Cannot live without global statements, especially for subprocessing.
    "PT017",
    "RET504",   # https://github.com/astral-sh/ruff/issues/17292#issuecomment-3039232890
    "RUF100",   # BUG: removes necessary noqa: E402 in tests!
    "RUF012",   # Mutable class attributes should be annotated with `typing.ClassVar`, but _fields_ is not mutable.

    "SIM102",   # Sometimes, nested if-statements are more readable.
    "SIM105",

    # Bug: SIM118 removes the keys() from row.keys(), which is an sqlite3.Row not a Dict!
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[format]
line-ending = "lf"
quote-style = "preserve"

